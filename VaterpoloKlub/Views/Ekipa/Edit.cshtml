@model VaterpoloKlub.Models.Ekipa

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Ekipa</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Naziv" class="control-label"></label>
                <input asp-for="Naziv" class="form-control" />
                <span asp-validation-for="Naziv" class="text-danger"></span>
                @for (int i = 0; i < 7; i++)
                {
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="inputGroupSelect01">Igrac @(i+1)</label>
                        </div>
                        <select class="custom-select" name="Igraci">
                            <option value="@Model.Clanovi[i].ClanId" selected>@(Model.Clanovi[i].Clan.Ime + " " + Model.Clanovi[i].Clan.Prezime)</option>
                            @foreach (var item in ViewData["Clanovi"] as List<Clan>)
                            {
                                if (item.ID != Model.Clanovi[i].ClanId)
                                {
                                    <option value="@item.ID">@(item.Ime + " " + item.Prezime)</option>

                                }
                            }
                        </select>
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
